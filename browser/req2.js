// empty object serving as the export scope
const exports = {};

// alternative approach which uses 
const imports = [];

let path = '';

// digests Node style require statements as generated by TypeScript
function require(file) {
  console.log('[require]');
  imports.push(file);
  while (imports.length) {
    load(imports.shift());
  }
}

// load JS via XHR
function load(file) {
  if (file.startsWith('./') || file.startsWith('../')) {
    // relative path
    file = path + file;
  }
  path = file.slice(0, file.lastIndexOf('/'));
  console.log('[loadXhr]');
  const xhr = new XMLHttpRequest();
  // the key is to load asynchronously to guarantee the order of exectution
  xhr.open('GET', file + '.js', false);
  xhr.setRequestHeader('Accept', 'application/javascript');
  xhr.onreadystatechange = function() {
    if (xhr.readyState == 4) {
      console.log(`[loaded ${file}]`);
      eval(xhr.responseText);
    }
  }
  xhr.onerror = function() {
  }
  xhr.send();
}
